/*
 * To change thi            @Override
            public boolean accept(File f) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public String getDescription() {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        }   @Override
    public boolean accept(File f) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getDescription() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
s license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainpack;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.input.SAXBuilder;

/**
 *
 * @author flori
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    String sourceTree;
    
    public MainFrame() {
        initComponents();
        //Der Tabelle jTable1 ein neues leeres Model zuweisen
        jTable1.setModel(new DefaultTableModel(new String[]{"Zeilenummer", "id", "Übersetzung"}, 0));
        
        jFrame_ST.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jFrame_ST = new javax.swing.JFrame();
        jButton_ST_ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField_ST_pfad = new javax.swing.JTextField();
        jButton_ST_abbr = new javax.swing.JButton();
        jFrame_autosuche = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_datei = new javax.swing.JMenu();
        jMenuItem_oeffnen = new javax.swing.JMenuItem();
        jMenuItem_autosuche = new javax.swing.JMenuItem();
        jMenu_menue = new javax.swing.JMenu();
        jMenu_extras = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("Übersetzung öffnen");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Übersetzungen (.po,.ts)", "ts","po")
        );
        fileChooser.setToolTipText("");

        jFrame_ST.setResizable(false);
        jFrame_ST.setSize(new java.awt.Dimension(230, 100));

        jButton_ST_ok.setText("OK");
        jButton_ST_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ST_okActionPerformed(evt);
            }
        });

        jLabel1.setText("Bitte geben sie den Source Tree ein:");

        jTextField_ST_pfad.setName("jTextfield_ST"); // NOI18N

        javax.swing.GroupLayout jFrame_STLayout = new javax.swing.GroupLayout(jFrame_ST.getContentPane());
        jFrame_ST.getContentPane().setLayout(jFrame_STLayout);
        jFrame_STLayout.setHorizontalGroup(
            jFrame_STLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame_STLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame_STLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame_STLayout.createSequentialGroup()
                        .addGroup(jFrame_STLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_ST_pfad))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(jFrame_STLayout.createSequentialGroup()
                        .addComponent(jButton_ST_ok)
                        .addContainerGap(185, Short.MAX_VALUE))))
        );
        jFrame_STLayout.setVerticalGroup(
            jFrame_STLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame_STLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_ST_pfad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_ST_ok)
                .addContainerGap())
        );

        jButton_ST_abbr.setText("Abbrechen");
        jButton_ST_abbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ST_abbrActionPerformed(evt);
            }
        });

        jFrame_autosuche.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame_autosuche.setResizable(false);

        jLabel2.setText("Folgende Übersetzung wurde gefunden:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Übersetzung öffnen!");

        javax.swing.GroupLayout jFrame_autosucheLayout = new javax.swing.GroupLayout(jFrame_autosuche.getContentPane());
        jFrame_autosuche.getContentPane().setLayout(jFrame_autosucheLayout);
        jFrame_autosucheLayout.setHorizontalGroup(
            jFrame_autosucheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jFrame_autosucheLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame_autosucheLayout.setVerticalGroup(
            jFrame_autosucheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame_autosucheLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ETA Translation Suite");
        setIconImages(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jMenu_datei.setText("Datei");

        jMenuItem_oeffnen.setText("Übersetzung öffnen");
        jMenuItem_oeffnen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_oeffnenActionPerformed(evt);
            }
        });
        jMenu_datei.add(jMenuItem_oeffnen);

        jMenuItem_autosuche.setText("Autosuchen");
        jMenuItem_autosuche.setEnabled(false);
        jMenuItem_autosuche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_autosucheActionPerformed(evt);
            }
        });
        jMenu_datei.add(jMenuItem_autosuche);

        jMenuBar1.add(jMenu_datei);

        jMenu_menue.setText("Menü");
        jMenuBar1.add(jMenu_menue);

        jMenu_extras.setText("Extras");

        jMenuItem2.setText("Source Tree");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu_extras.add(jMenuItem2);

        jMenuBar1.add(jMenu_extras);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_oeffnenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_oeffnenActionPerformed
        // In dieser Methode wird eine Übersetzungdatei geöffnet, ausgelesen und in die Tabelle jTable1 eingefügt.

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            BufferedReader br;

            File uebersetzung = fileChooser.getSelectedFile();

            if (uebersetzung.getAbsolutePath().endsWith(".po")) {
                try {
                    br = new BufferedReader(new FileReader(uebersetzung));
                    int rowcount = 1;
                    
                    while (true) {
                        
                        String s = br.readLine();
                        
                        //String s ist der eingelesene Zeile aus dem selektierten
                        // .po Files, in der folgende if Anwesiung wird geprüft ob
                        // der Strings das Kürzel msid enthält, wenn des stimmt
                        // wird überprüft ob die folgende Zeile des Kürzel msgstr enthält.
                        // Wenn das wieder Stimmt dann wird der String s und der
                        // String next in der jTable1 hinzugefügt
                        if (s != null) {
                            rowcount++;
                            if (s.contains("msgid")) {
                                String next = br.readLine();
                                
                                if (next != null && next.contains("msgstr")) {
                                    
                                    s = s.substring(7, s.length() - 1);
                                    next = next.substring(8, next.length() - 1);
                                    ((DefaultTableModel) jTable1.getModel()).addRow(new String[]{Integer.toString(rowcount - 1) + "-" + Integer.toString(rowcount), s, next});
                                }
                            }
                        } else {
                            break;
                        }
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (uebersetzung.getAbsolutePath().endsWith(".ts")) {
                
                jTable1.setModel(new DefaultTableModel(new String[] {"zeilennummer","filename","Quelle","Übersetzung"},0));
                
                try {
                    String pfad=uebersetzung.getAbsolutePath();
                    System.out.println(pfad);
                    Document tsfile = new SAXBuilder().build(pfad);
                    Element ts = tsfile.getRootElement();
                    Element context= ts.getChild("context");
                    List<Element> messages=context.getChildren("message");
                    for(Element e:messages){
                        ((DefaultTableModel)jTable1.getModel()).addRow(new String[] {
                            e.getChild("location").getAttributeValue("line"),
                            e.getChild("location").getAttributeValue("filename"),
                            e.getChildText("source"),
                            e.getChildText("translation")
                                
                        });
                    }
                    
                            
                } catch (JDOMException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

    }//GEN-LAST:event_jMenuItem_oeffnenActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //Wenn man auf den Menüeintrag Autosuchen klickt öffnet sich ein kleines Eingabefenster
        jFrame_ST.setVisible(true);
        jFrame_ST.setSize(220,130);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton_ST_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ST_okActionPerformed
        // Wenn man OK klickt wird der Source Tree gespeichert
       //mithilfe des eingegeben Strings wird ein File ersellt
       //damit ist möglich zu überprüfen ob der sourctree existiert bzw. 
       //nicht schreib/lesegeschützt ist
        sourceTree=jTextField_ST_pfad.getText();
        File f=new File(sourceTree);
        
        if(f.isDirectory()&&f.exists()&&f.canRead()&&f.canWrite()){
            jFrame_ST.setVisible(false);
            jMenuItem_autosuche.setEnabled(true);
            
        }else if(!f.isDirectory()){
            JOptionPane.showMessageDialog(rootPane,"Source Tree ist keine Verzeichniss","Eingabehler",JOptionPane.ERROR_MESSAGE);
            sourceTree="";
            jTextField_ST_pfad.setText("");
        }else if(!f.exists()){
            JOptionPane.showMessageDialog(rootPane,"Source Tree existiert nicht","Eingabehler",JOptionPane.ERROR_MESSAGE);
            sourceTree="";
            jTextField_ST_pfad.setText("");
        }else if(!f.canRead()){
            JOptionPane.showMessageDialog(rootPane,"Source Tree ist lesegeschützt","Eingabehler",JOptionPane.ERROR_MESSAGE);
            sourceTree="";
            jTextField_ST_pfad.setText("");
        }else if(!f.canWrite()){
            JOptionPane.showMessageDialog(rootPane,"Source Tree ist schreibgeschützt","Eingabehler",JOptionPane.ERROR_MESSAGE);
            sourceTree="";
            jTextField_ST_pfad.setText("");
        }
         
    }//GEN-LAST:event_jButton_ST_okActionPerformed

    private void jButton_ST_abbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ST_abbrActionPerformed
        // Wenn man abbrechen klickt wird der Source Tree nicht gespeichert 
        jFrame_ST.setVisible(false);
    }//GEN-LAST:event_jButton_ST_abbrActionPerformed

    private void jMenuItem_autosucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_autosucheActionPerformed
        // Hier wird im Source Tree nach Übersetzungen gesucht
        jFrame_autosuche.setSize(400, 121);
        jFrame_autosuche.setVisible(true);
    }//GEN-LAST:event_jMenuItem_autosucheActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_ST_abbr;
    private javax.swing.JButton jButton_ST_ok;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFrame jFrame_ST;
    private javax.swing.JFrame jFrame_autosuche;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem_autosuche;
    private javax.swing.JMenuItem jMenuItem_oeffnen;
    private javax.swing.JMenu jMenu_datei;
    private javax.swing.JMenu jMenu_extras;
    private javax.swing.JMenu jMenu_menue;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_ST_pfad;
    // End of variables declaration//GEN-END:variables
}
